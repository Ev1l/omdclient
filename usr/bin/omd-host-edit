#!/usr/bin/env python
"""
Update a host entry in OMD.
"""

#########################################################################
### Declarations ########################################################
#########################################################################

import omdclient, optparse, sys

#########################################################################
### Configuration #######################################################
#########################################################################
## Managed via central libraries and /etc/omd_client

instance = 'undef'

# config_file = '/etc/omdclient/config.yaml'
config_file = '/home/tskirvin/work/rpm/omdclient/etc/omdclient/config.yaml'

## Text for --help
text = "Update a given host from OMD, using the WATO API"
usage_text = "usage: %prog [options] HOSTNAME"

#########################################################################
### Subroutines #########################################################
#########################################################################

def generateRequestPayload (result, role, arghash):
    """
    """
    att = result['attributes']

    change = {}
    if att['tag_role'] != role:
        change['tag_role'] = role

    if att['tag_instance'] != arghash['instance']:
        change['tag_instance'] = arghash['instance']

    payload = {}
    payload['hostname'] = result['hostname']
    payload['attributes'] = change
    return payload


def printReport(result, opt):
    """
    Given the result from query(), print a useful report regarding the
    host.
    """
    att = result['attributes']
    print result['hostname']
    if att['alias']:
        print "  %-20s %s" % ('alias', att['alias'])
    print "  %-20s %s" % ('cmk_role',     att['tag_role'])
    print "  %-20s %s" % ('cmk_instance', att['tag_instance'])
    print "  %-20s %s" % ('folder',       result['path'])


#########################################################################
### main () #############################################################
#########################################################################

def main():
    try:
        config = omdclient.loadCfg (config_file)
    except Exception, e:
        print "failed to load config: %s" % (e)
        sys.exit(3)

    p = omdclient.generateParser(text, usage_text, config)
    p.add_option('--instance', dest='instance', default=instance,
        help='instance name (default: %default)')
    opt, args = p.parse_args()
    arghash = omdclient.generateUrlArgs(opt)

    arghash['instance'] = opt.instance

    if len(args) != 2:
        p.print_help()
        sys.exit(1)

    host     = args[0]
    role     = args[1]
    result = omdclient.queryHost(host, arghash)

    if result == False:
        print "%s - no match" % host
        sys.exit(1)
    else:
        payload = generateRequestPayload (result, role, arghash)
        omdclient.updateHost(host, payload, arghash)
        sys.exit(0)

if __name__ == "__main__":
    main()

#########################################################################
### POD Documentation ###################################################
#########################################################################

"""

=head1 NAME

omd-hostinfo - print omd/check_mk configuration info about a given host

=head1 SYNOPSIS

B<omd-hostinfo> cmsadmin1

=head1 USAGE

omd-hostinfo queries an OMD monitoring site for information about a given
host, and prints a useful summary to STDOUT.  This output looks something
like:

    cmssrv288
      alias                cms-console-bak
      cmk_role             console
      cmk_instance         backup
      folder               cms-internal

=head1 ARGUMENTS

=over 4

=item B<--debug>

If set, print debugging information.

=item B<--apikey> I<key>

Password for the API User.  Default: comes from the configuration file.

=item B<--server> I<server>

Host name of the server.  Default: comes from the configuration file.

=item B<--site> I<site>

Site name within the server.  Default: comes from the configuration file.

=item B<--user> I<user>

API User name.  The user must exist on the server, and be an 'automation
user'.  Default: comes from the configuration file.

=item I<hostname>

Hostname for which to query.  No default, must be set.

=back

=head1 FILES

=over 4

=item F</etc/omdclient/config.yaml>

=back

=head1 SEE ALSO

https://mathias-kettner.de/checkmk_wato_webapi.html

=head1 AUTHOR

Tim Skirvin <tskirvin@fnal.gov>

=head1 LICENSE + COPYRIGHT

Copyright 2015, Fermi National Accelerator Laboratory

This program is free software; you may redistribute it and/or modify it
under the same terms as Perl itself.

=cut

"""
